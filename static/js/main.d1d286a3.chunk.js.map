{"version":3,"sources":["components/Task.js","helpers/idGenerator.js","components/ToDos.js","App.js","reportWebVitals.js","index.js"],"names":["Task","value","useState","checked","setChecked","console","log","className","type","onClick","idGenerator","Math","random","toString","slice","tasksList","id","item","ToDos","tasks","taskList","map","el","icon","faBars","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8MAoBeA,EAlBF,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACd,EAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAMA,OADAC,QAAQC,IAAIH,GAEV,8BACE,wBAAOI,UAAWJ,EAAO,6BAAzB,UACGA,EAAU,8BAAMF,IAAeA,EAChC,uBAAOO,KAAK,WAAWC,QART,WAClBL,GAAYD,MAQR,sBAAMI,UAAU,oB,cCdT,SAASG,IACtB,OACEC,KAAKC,SAASC,SAAS,IAAIC,MAAM,GACjC,IACAH,KAAKC,SAASC,SAAS,IAAIC,MAAM,GCErC,IAAIC,EAAY,CACd,CACEC,GAAIN,IACJO,KAAM,uBAER,CACED,GAAIN,IACJO,KAAM,gBAER,CACED,GAAIN,IACJO,KAAM,oBAER,CACED,GAAIN,IACJO,KAAM,mBA2BKC,MAxBf,WACE,MAA0BhB,mBAASa,GAAnC,mBAAOI,EAAP,KACIC,GADJ,KACeD,EAAME,KAAI,SAACC,GACxB,OACE,6BACE,cAAC,EAAD,CAAMrB,MAAOqB,EAAGL,QADTK,EAAGN,QAKhB,OACE,8BACE,sBAAKT,UAAU,UAAf,UACE,sBAAKA,UAAU,cAAf,UACE,yCACA,+BACE,cAAC,IAAD,CAAiBgB,KAAMC,WAG3B,6BAAKJ,UC/BEK,MARf,WACE,OACE,qBAAKlB,UAAU,MAAf,SACE,cAAC,EAAD,OCMSmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d1d286a3.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst Task = ({ value }) => {\r\n  const [checked, setChecked] = useState(false);\r\n\r\n  const handleCheck = () => {\r\n    setChecked(!checked);\r\n  };\r\n  console.log(checked);\r\n  return (\r\n    <div>\r\n      <label className={checked ? `container done` : `container`}>\r\n        {checked ? <del>{value}</del> : value}\r\n        <input type=\"checkbox\" onClick={handleCheck} />\r\n        <span className=\"checkmark\"></span>\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n","export default function idGenerator() {\r\n  return (\r\n    Math.random().toString(32).slice(2) +\r\n    \"-\" +\r\n    Math.random().toString(32).slice(2)\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Task from \"./Task\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faBars } from \"@fortawesome/free-solid-svg-icons\";\r\nimport idGenerator from \"./../helpers/idGenerator\";\r\n\r\nlet tasksList = [\r\n  {\r\n    id: idGenerator(),\r\n    item: \"Prepare for Session\",\r\n  },\r\n  {\r\n    id: idGenerator(),\r\n    item: \"Assign Tasks\",\r\n  },\r\n  {\r\n    id: idGenerator(),\r\n    item: \"Be there on time\",\r\n  },\r\n  {\r\n    id: idGenerator(),\r\n    item: \"Start Sessions\",\r\n  },\r\n];\r\nfunction ToDos() {\r\n  const [tasks, setTasks] = useState(tasksList);\r\n  let taskList = tasks.map((el) => {\r\n    return (\r\n      <li key={el.id}>\r\n        <Task value={el.item} />\r\n      </li>\r\n    );\r\n  });\r\n  return (\r\n    <div>\r\n      <div className=\"wrapper\">\r\n        <div className=\"todo-header\">\r\n          <span>Tasks</span>\r\n          <span>\r\n            <FontAwesomeIcon icon={faBars} />\r\n          </span>\r\n        </div>\r\n        <ul>{taskList}</ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ToDos;\r\n","import \"./App.css\";\nimport ToDos from \"./components/ToDos\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <ToDos />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}